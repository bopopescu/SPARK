Searching 6416 files for "onBlockFetchSuccess" (case sensitive)

0 matches

Searching 17282 files for "onBlockFetchSuccess" (case sensitive)


/home/daniar/documents/SPARK/spark-1.6.1/network/shuffle/src/main/java/org/apache/spark/network/shuffle/BlockFetchingListener.java:
   28     * and release() the buffer on their own, or copy the data to a new buffer.
   29     */
   30:   void onBlockFetchSuccess(String blockId, ManagedBuffer data);
   31  
   32    /**

/home/daniar/documents/SPARK/spark-1.6.1/network/shuffle/src/main/java/org/apache/spark/network/shuffle/OneForOneBlockFetcher.java:
   70      public void onSuccess(int chunkIndex, ManagedBuffer buffer) {
   71        // On receipt of a chunk, pass it upwards as a block.
   72:       listener.onBlockFetchSuccess(blockIds[chunkIndex], buffer);
   73      }
   74  

/home/daniar/documents/SPARK/spark-1.6.1/network/shuffle/src/main/java/org/apache/spark/network/shuffle/RetryingBlockFetcher.java:
  191    private class RetryingBlockFetchListener implements BlockFetchingListener {
  192      @Override
  193:     public void onBlockFetchSuccess(String blockId, ManagedBuffer data) {
  194        // We will only forward this success message to our parent listener if this block request is
  195        // outstanding and we are still the active listener.
  ...
  204        // Now actually invoke the parent listener, outside of the synchronized block.
  205        if (shouldForwardSuccess) {
  206:         listener.onBlockFetchSuccess(blockId, data);
  207        }
  208      }

/home/daniar/documents/SPARK/spark-1.6.1/network/shuffle/src/main/java/org/apache/spark/network/shuffle/ShuffleClient.java:
   33     *
   34     * Note that this API takes a sequence so the implementation can batch requests, and does not
   35:    * return a future so the underlying implementation can invoke onBlockFetchSuccess as soon as
   36     * the data of a block is fetched, rather than waiting for all blocks to be fetched.
   37     */

/home/daniar/documents/SPARK/spark-1.6.1/network/shuffle/src/test/java/org/apache/spark/network/sasl/SaslIntegrationSuite.java:
  200        BlockFetchingListener listener = new BlockFetchingListener() {
  201          @Override
  202:         public synchronized void onBlockFetchSuccess(String blockId, ManagedBuffer data) {
  203            notifyAll();
  204          }

/home/daniar/documents/SPARK/spark-1.6.1/network/shuffle/src/test/java/org/apache/spark/network/shuffle/ExternalShuffleIntegrationSuite.java:
  142        new BlockFetchingListener() {
  143          @Override
  144:         public void onBlockFetchSuccess(String blockId, ManagedBuffer data) {
  145            synchronized (this) {
  146              if (!res.successBlocks.contains(blockId) && !res.failedBlocks.contains(blockId)) {

/home/daniar/documents/SPARK/spark-1.6.1/network/shuffle/src/test/java/org/apache/spark/network/shuffle/OneForOneBlockFetcherSuite.java:
   58      BlockFetchingListener listener = fetchBlocks(blocks);
   59  
   60:     verify(listener).onBlockFetchSuccess("shuffle_0_0_0", blocks.get("shuffle_0_0_0"));
   61    }
   62  
   ..
   71  
   72      for (int i = 0; i < 3; i ++) {
   73:       verify(listener, times(1)).onBlockFetchSuccess("b" + i, blocks.get("b" + i));
   74      }
   75    }
   ..
   85  
   86      // Each failure will cause a failure to be invoked in all remaining block fetches.
   87:     verify(listener, times(1)).onBlockFetchSuccess("b0", blocks.get("b0"));
   88      verify(listener, times(1)).onBlockFetchFailure(eq("b1"), (Throwable) any());
   89      verify(listener, times(2)).onBlockFetchFailure(eq("b2"), (Throwable) any());
   ..
  100  
  101      // We may call both success and failure for the same block.
  102:     verify(listener, times(1)).onBlockFetchSuccess("b0", blocks.get("b0"));
  103      verify(listener, times(1)).onBlockFetchFailure(eq("b1"), (Throwable) any());
  104:     verify(listener, times(1)).onBlockFetchSuccess("b2", blocks.get("b2"));
  105      verify(listener, times(1)).onBlockFetchFailure(eq("b2"), (Throwable) any());
  106    }

/home/daniar/documents/SPARK/spark-1.6.1/network/shuffle/src/test/java/org/apache/spark/network/shuffle/RetryingBlockFetcherSuite.java:
   80      performInteractions(interactions, listener);
   81  
   82:     verify(listener).onBlockFetchSuccess("b0", block0);
   83:     verify(listener).onBlockFetchSuccess("b1", block1);
   84      verifyNoMoreInteractions(listener);
   85    }
   ..
  100  
  101      verify(listener).onBlockFetchFailure(eq("b0"), (Throwable) any());
  102:     verify(listener).onBlockFetchSuccess("b1", block1);
  103      verifyNoMoreInteractions(listener);
  104    }
  ...
  122      performInteractions(interactions, listener);
  123  
  124:     verify(listener, timeout(5000)).onBlockFetchSuccess("b0", block0);
  125:     verify(listener, timeout(5000)).onBlockFetchSuccess("b1", block1);
  126      verifyNoMoreInteractions(listener);
  127    }
  ...
  144      performInteractions(interactions, listener);
  145  
  146:     verify(listener, timeout(5000)).onBlockFetchSuccess("b0", block0);
  147:     verify(listener, timeout(5000)).onBlockFetchSuccess("b1", block1);
  148      verifyNoMoreInteractions(listener);
  149    }
  ...
  172      performInteractions(interactions, listener);
  173  
  174:     verify(listener, timeout(5000)).onBlockFetchSuccess("b0", block0);
  175:     verify(listener, timeout(5000)).onBlockFetchSuccess("b1", block1);
  176      verifyNoMoreInteractions(listener);
  177    }
  ...
  204      performInteractions(interactions, listener);
  205  
  206:     verify(listener, timeout(5000)).onBlockFetchSuccess("b0", block0);
  207      verify(listener, timeout(5000)).onBlockFetchFailure(eq("b1"), (Throwable) any());
  208      verifyNoMoreInteractions(listener);
  ...
  234      performInteractions(interactions, listener);
  235  
  236:     verify(listener, timeout(5000)).onBlockFetchSuccess("b0", block0);
  237      verify(listener, timeout(5000)).onBlockFetchFailure(eq("b1"), (Throwable) any());
  238:     verify(listener, timeout(5000)).onBlockFetchSuccess("b2", block2);
  239      verifyNoMoreInteractions(listener);
  240    }
  ...
  283  
  284                if (blockValue instanceof ManagedBuffer) {
  285:                 retryListener.onBlockFetchSuccess(blockId, (ManagedBuffer) blockValue);
  286                } else if (blockValue instanceof Exception) {
  287                  retryListener.onBlockFetchFailure(blockId, (Exception) blockValue);

38 matches across 14 files
































Searching 17282 files for "fetchBlocks"

